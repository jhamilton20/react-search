{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _EventManager = require('./util/EventManager');\n\nvar _EventManager2 = _interopRequireDefault(_EventManager);\n\nvar _config = require('./config');\n\nvar _config2 = _interopRequireDefault(_config);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/*\n* TODO: Add validation here :\n*   - Validate type\n*   - Maybe autoClose\n*   - Maybe closeButton as well\n* */\n\n\nvar POSITION = _config2.default.POSITION,\n    TYPE = _config2.default.TYPE,\n    ACTION = _config2.default.ACTION;\nvar defaultOptions = {\n  type: TYPE.DEFAULT,\n  autoClose: null,\n  closeButton: null,\n  hideProgressBar: null\n};\n\nfunction mergeOptions(options) {\n  return Object.assign({}, defaultOptions, options);\n}\n\nvar emitEvent = function emitEvent(content, options) {\n  return _EventManager2.default.emit(ACTION.SHOW, content, options);\n};\n\nexports.default = Object.assign(function (content, options) {\n  return emitEvent(content, mergeOptions(options));\n}, {\n  success: function success(content, options) {\n    return emitEvent(content, Object.assign(mergeOptions(options), {\n      type: TYPE.SUCCESS\n    }));\n  },\n  info: function info(content, options) {\n    return emitEvent(content, Object.assign(mergeOptions(options), {\n      type: TYPE.INFO\n    }));\n  },\n  warn: function warn(content, options) {\n    return emitEvent(content, Object.assign(mergeOptions(options), {\n      type: TYPE.WARNING\n    }));\n  },\n  error: function error(content, options) {\n    return emitEvent(content, Object.assign(mergeOptions(options), {\n      type: TYPE.ERROR\n    }));\n  },\n  dismiss: function dismiss() {\n    return _EventManager2.default.emit(ACTION.CLEAR);\n  }\n}, {\n  POSITION: POSITION,\n  TYPE: TYPE\n});","map":{"version":3,"sources":["/Users/jhamilton20/Documents/reactsearch/google-books-search/node_modules/react-toastify/lib/toastify.js"],"names":["Object","defineProperty","exports","value","_EventManager","require","_EventManager2","_interopRequireDefault","_config","_config2","obj","__esModule","default","POSITION","TYPE","ACTION","defaultOptions","type","DEFAULT","autoClose","closeButton","hideProgressBar","mergeOptions","options","assign","emitEvent","content","emit","SHOW","success","SUCCESS","info","INFO","warn","WARNING","error","ERROR","dismiss","CLEAR"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _EventManager = require('./util/EventManager');\n\nvar _EventManager2 = _interopRequireDefault(_EventManager);\n\nvar _config = require('./config');\n\nvar _config2 = _interopRequireDefault(_config);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n* TODO: Add validation here :\n*   - Validate type\n*   - Maybe autoClose\n*   - Maybe closeButton as well\n* */\nvar POSITION = _config2.default.POSITION,\n    TYPE = _config2.default.TYPE,\n    ACTION = _config2.default.ACTION;\n\n\nvar defaultOptions = {\n  type: TYPE.DEFAULT,\n  autoClose: null,\n  closeButton: null,\n  hideProgressBar: null\n};\n\nfunction mergeOptions(options) {\n  return Object.assign({}, defaultOptions, options);\n}\n\nvar emitEvent = function emitEvent(content, options) {\n  return _EventManager2.default.emit(ACTION.SHOW, content, options);\n};\n\nexports.default = Object.assign(function (content, options) {\n  return emitEvent(content, mergeOptions(options));\n}, {\n  success: function success(content, options) {\n    return emitEvent(content, Object.assign(mergeOptions(options), { type: TYPE.SUCCESS }));\n  },\n  info: function info(content, options) {\n    return emitEvent(content, Object.assign(mergeOptions(options), { type: TYPE.INFO }));\n  },\n  warn: function warn(content, options) {\n    return emitEvent(content, Object.assign(mergeOptions(options), { type: TYPE.WARNING }));\n  },\n  error: function error(content, options) {\n    return emitEvent(content, Object.assign(mergeOptions(options), { type: TYPE.ERROR }));\n  },\n  dismiss: function dismiss() {\n    return _EventManager2.default.emit(ACTION.CLEAR);\n  }\n}, {\n  POSITION: POSITION,\n  TYPE: TYPE\n});"]},"metadata":{},"sourceType":"script"}