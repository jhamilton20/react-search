'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _EventManager = require('./util/EventManager');

var _EventManager2 = _interopRequireDefault(_EventManager);

var _config = require('./config');

var _config2 = _interopRequireDefault(_config);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*
* TODO: Add validation here :
*   - Validate type
*   - Maybe autoClose
*   - Maybe closeButton as well
* */
var POSITION = _config2.default.POSITION,
    TYPE = _config2.default.TYPE,
    ACTION = _config2.default.ACTION;


var defaultOptions = {
  type: TYPE.DEFAULT,
  autoClose: null,
  closeButton: null,
  hideProgressBar: null
};

function mergeOptions(options) {
  return Object.assign({}, defaultOptions, options);
}

var emitEvent = function emitEvent(content, options) {
  return _EventManager2.default.emit(ACTION.SHOW, content, options);
};

exports.default = Object.assign(function (content, options) {
  return emitEvent(content, mergeOptions(options));
}, {
  success: function success(content, options) {
    return emitEvent(content, Object.assign(mergeOptions(options), { type: TYPE.SUCCESS }));
  },
  info: function info(content, options) {
    return emitEvent(content, Object.assign(mergeOptions(options), { type: TYPE.INFO }));
  },
  warn: function warn(content, options) {
    return emitEvent(content, Object.assign(mergeOptions(options), { type: TYPE.WARNING }));
  },
  error: function error(content, options) {
    return emitEvent(content, Object.assign(mergeOptions(options), { type: TYPE.ERROR }));
  },
  dismiss: function dismiss() {
    return _EventManager2.default.emit(ACTION.CLEAR);
  }
}, {
  POSITION: POSITION,
  TYPE: TYPE
});